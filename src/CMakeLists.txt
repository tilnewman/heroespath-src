cmake_minimum_required(VERSION 3.5)
project("Heroes Path")

message(STATUS "System Detected: ${CMAKE_SYSTEM}")

set(CUSTOM_BUILD_FLAGS "")
set(CUSTOM_LINK_FLAGS "")

option(VALGRIND_BUILD "Build flags customized for Valgrind" OFF)

if(MSVC)
    set(SFML_PATH "C:/Program Files/SFML-2.4.1")
    message(STATUS "${PROJECT_NAME} will look for SFML here: \"" ${SFML_PATH} "\"")

    file (READ ../build-flags/build-flags-msvc.txt CUSTOM_BUILD_FLAGS)

    set(BOOST_INCLUDEDIR "C:/local/boost_1_61_0")
    set(BOOST_LIBRARYDIR "C:/local/boost_1_61_0/lib32-msvc-14.0")
    set(BOOST_ROOT "C:/local/boost_1_61_0/boost")

    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/configbase.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/configbase.suppress DESTINATION ${CMAKE_BINARY_DIR}/configbase)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/game.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/game.suppress DESTINATION ${CMAKE_BINARY_DIR}/game)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/combat.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/combat.suppress DESTINATION ${CMAKE_BINARY_DIR}/combat)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/creature.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/creature.suppress DESTINATION ${CMAKE_BINARY_DIR}/creature)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/item.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/item.suppress DESTINATION ${CMAKE_BINARY_DIR}/item)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/location.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/location.suppress DESTINATION ${CMAKE_BINARY_DIR}/location)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/non-player.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/non-player.suppress DESTINATION ${CMAKE_BINARY_DIR}/non-player)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/player.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/player.suppress DESTINATION ${CMAKE_BINARY_DIR}/player)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/spell.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/spell.suppress DESTINATION ${CMAKE_BINARY_DIR}/spell)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/stage.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/stage.suppress DESTINATION ${CMAKE_BINARY_DIR}/stage)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/state.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/state.suppress DESTINATION ${CMAKE_BINARY_DIR}/state)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/stats.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/stats.suppress DESTINATION ${CMAKE_BINARY_DIR}/stats)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/heroespath.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/heroespath.suppress DESTINATION ${CMAKE_BINARY_DIR}/HeroesPath)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/logbase.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/logbase.suppress DESTINATION ${CMAKE_BINARY_DIR}/logbase)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/misc.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/misc.suppress DESTINATION ${CMAKE_BINARY_DIR}/misc)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/sfml-util.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/sfml-util.suppress DESTINATION ${CMAKE_BINARY_DIR}/sfml-util)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/sfml-util-gui.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/sfml-util-gui.suppress DESTINATION ${CMAKE_BINARY_DIR}/sfml-util/gui)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/stringutil.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/stringutil.suppress DESTINATION ${CMAKE_BINARY_DIR}/stringutil)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/popup.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/popup.suppress DESTINATION ${CMAKE_BINARY_DIR}/popup)
    endif()
    if(EXISTS ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/map.suppress)
        file(COPY ${CMAKE_SOURCE_DIR}/../pvs-studio-suppressions/map.suppress DESTINATION ${CMAKE_BINARY_DIR}/map)
    endif()
endif()

if(WIN32)
	set(SFML_INCLUDE_DIR ${SFML_PATH}/include)
	set(SFML_LIBRARY_DIRS ${SFML_PATH}/lib)
	set(SFML_LIBRARIES sfml-system.lib sfml-window.lib sfml-graphics.lib sfml-audio.lib)
	set(Boost_COMPILER -vc90)
    	include_directories(${include_directories} . ${SFML_INCLUDE_DIR})
else()
	set(SFML_INCLUDE_DIR "-I/usr/include/SFML")
	set(SFML_LIBRARY_DIRS "/usr/lib")
	set(SFML_LIBRARIES sfml-system sfml-window sfml-graphics sfml-audio)
endif()

if(CMAKE_CXX_COMPILER_ID STREQUAL GNU)

    set(CUSTOM_LINK_FLAGS "-pthread")

    if(VALGRIND_BUILD)
        file (READ ../build-flags/build-flags-gnu-valgrind.txt CUSTOM_BUILD_FLAGS)
        message("Compiler flags customized for Valgrind.")
    else()
        file (READ ../build-flags/build-flags-gnu.txt CUSTOM_BUILD_FLAGS)
    endif()
endif()

if(CMAKE_CXX_COMPILER_ID STREQUAL AppleClang)
    file (READ ../build-flags/build-flags-clang.txt CUSTOM_BUILD_FLAGS)
endif()

add_definitions( ${CUSTOM_BUILD_FLAGS} )
SET( CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} ${CUSTOM_LINK_FLAGS}" )

message(STATUS "Compiler Detected: ${CMAKE_CXX_COMPILER_ID} with compile flags: ${CUSTOM_BUILD_FLAGS} and linker flags: ${CMAKE_EXE_LINKER_FLAGS}")

set(CUSTOM_PROJECT_BOOST_VER "1.58.0")
set(Boost_USE_STATIC_LIBS ON)
set(Boost_USE_MULTITHREADED ON) #default is ON, but the consequences...
set(Boost_ADDITIONAL_VERSIONS ${Boost_ADDITIONAL_VERSIONS} ${CUSTOM_PROJECT_BOOST_VER})
FIND_PACKAGE(Boost ${CUSTOM_PROJECT_BOOST_VER} COMPONENTS system thread filesystem random serialization unit_test_framework)
message(STATUS "Using boost version: " ${Boost_VERSION})

include_directories(${include_directories} . ${Boost_INCLUDE_DIRS} ${BOOST_INCLUDEDIR})
link_directories(${link_directories} ${Boost_LIBRARY_DIRS} ${BOOST_LIBRARYDIR})
add_subdirectory(misc)
add_subdirectory(config)
add_subdirectory(log)
add_subdirectory(stringutil)
add_subdirectory(sfml-util)
add_subdirectory(popup)
add_subdirectory(game)
add_subdirectory(HeroesPath)
add_subdirectory(HeroesPathTest)
add_subdirectory(combat)
add_subdirectory(non-player)
add_subdirectory(item)
add_subdirectory(player)
add_subdirectory(song)
add_subdirectory(spell)
add_subdirectory(stage)
add_subdirectory(state)
add_subdirectory(stats)
add_subdirectory(creature)
add_subdirectory(location)
add_subdirectory(map)
